단위문제 명	문제2 미션 컴퓨터의 내용을 좀 더 분석해 보자
분야	컴퓨터공학	구분	PYTHON
문제기술	기술적설명	
스토리 
시스템을 로그를 눈으로 살펴 보았더니 문제가 무엇인지 파악 할 수 있었다. 하지만 앞으로도 어떤 일이 일어 날지 몰랐다. 그래서 시스템 로그를 분석하는 시스템을 복구해야 했다. 문제 1에서 분석했던 로그 파일을 좀 더 체계적으로 분석할 수 있도록 시스템을 복구해 보자. 

다시 mission_computer_main.log 파일을 찬찬히 살펴 보니 전체 내용이 콤마로 구별된 전형적인 CSV 파일 포멧이었다. 

수행과제 
mission_computer_main.log 파일을 읽어들여서 출력한다. 콤마를 기준으로 날짜 및 시간과 로그 내용을 분류해서 Python의 리스트(List) 객체로 전환한다. 
(여기서 말하는 리스트는 배열이 아니라 파이썬에서 제공하는 리스트 타입의 객체를 의미한다.)
전환된 리스트 객체를 화면에 출력한다. 
리스트 객체를 시간의 역순으로 정렬(sort)한다. 
리스트 객체를 사전(Dict) 객체로 전환한다. 
사전 객체로 전환된 내용을 mission_computer_main.json 파일로 저장하는데 파일 포멧은 JSON(JavaScript Ontation)으로 저장한다. 
개발환경	
Python 버전은 3.x 버전으로 한다. 
Python에서 기본 제공되는 명령어만 사용해야 하며 별도의 라이브러리나 패키지를 사용해서는 안된다. 
Python의 coding style guide를 확인하고 가이드를 준수해서 코딩한다. 
(PEP 8 – 파이썬 코드 스타일 가이드 | peps.python.org)
문자열을 표현 할 때에는 ‘ ’을 기본으로 사용한다. 다만 문자열 내에서 ‘을 사용할 경우와 같이 부득이한 경우에는 “ “를 사용한다. 
foo = (0,) 와 같이 대입문의  = 앞 뒤로는 공백을 준다. 
들여 쓰기는 공백을 기본으로 사용합니다. 
제약조건	
제약사항
추가 라이브러리를 사용하지 않고 Python 기본 명령어로만 작업해야 한다. 
파일처리 부분에는 모두 예외처리가 되어 있어야 한다. 
JSON 포멧이 완전하게 구현되어야 한다. 
보너스 과제
사전 객체로 전환된 내용에서 특정 문자열 (예를 들어 Oxygen)을 입력하면 해당 내용을 출력하는 코드를 추가한다. 